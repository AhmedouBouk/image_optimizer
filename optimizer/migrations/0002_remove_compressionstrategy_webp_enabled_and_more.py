# Generated by Django 5.1 on 2024-12-05 20:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('optimizer', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='compressionstrategy',
            name='webp_enabled',
        ),
        migrations.AddField(
            model_name='compressionstrategy',
            name='algorithm',
            field=models.CharField(choices=[('intelligent', 'Compression Intelligente'), ('lossy', 'Compression avec Perte Optimisée'), ('lossless', 'Compression sans Perte'), ('adaptive', 'Compression Adaptative')], default='intelligent', max_length=20),
        ),
        migrations.AddField(
            model_name='compressionstrategy',
            name='auto_optimize',
            field=models.BooleanField(default=True, help_text='Optimisation automatique basée sur le contenu'),
        ),
        migrations.AddField(
            model_name='compressionstrategy',
            name='output_format',
            field=models.CharField(choices=[('WEBP', 'WebP (Recommandé)'), ('JPEG', 'JPEG'), ('PNG', 'PNG')], default='WEBP', max_length=10),
        ),
        migrations.AddField(
            model_name='compressionstrategy',
            name='preserve_metadata',
            field=models.BooleanField(default=False, help_text='Conserver les métadonnées importantes'),
        ),
        migrations.AddField(
            model_name='compressionstrategy',
            name='progressive_loading',
            field=models.BooleanField(default=True, help_text='Activer le chargement progressif'),
        ),
        migrations.AddField(
            model_name='optimizedimage',
            name='image_dimensions',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='compressionstrategy',
            name='max_dimensions',
            field=models.IntegerField(default=2000, help_text='Dimension maximale en pixels', validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(8000)]),
        ),
        migrations.AlterField(
            model_name='compressionstrategy',
            name='quality_factor',
            field=models.IntegerField(default=85, help_text='Facteur de qualité (1-100)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)]),
        ),
    ]
